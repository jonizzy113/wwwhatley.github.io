{"version":3,"sources":["webpack:///component---src-pages-tools-js-c7c180015667364d8cfd.js","webpack:///./src/pages/tools.js"],"names":["webpackJsonp","217","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_taggedTemplateLiteralLoose","strings","raw","_templateObject","_react","_react2","_styledComponents","_styledComponents2","_index","_gatsbyLink","_footer","_footer2","A","a","others","name","link","Tool","_ref","title","text","createElement","Title3","href","target","Row","margin","Text","Tools","Column","page","Title1","Title2","style","flexWrap","map","tool","padding","fontSize"],"mappings":"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","file":"component---src-pages-tools-js-c7c180015667364d8cfd.js","sourcesContent":["webpackJsonp([101179379639045],{\n\n/***/ 217:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _templateObject = _taggedTemplateLiteralLoose(['\\n  text-decoration: underline;\\n  color: #fff;\\n  padding: 0.1em 0;\\n'], ['\\n  text-decoration: underline;\\n  color: #fff;\\n  padding: 0.1em 0;\\n']);\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _styledComponents = __webpack_require__(21);\n\t\n\tvar _styledComponents2 = _interopRequireDefault(_styledComponents);\n\t\n\tvar _index = __webpack_require__(22);\n\t\n\tvar _gatsbyLink = __webpack_require__(25);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _footer = __webpack_require__(43);\n\t\n\tvar _footer2 = _interopRequireDefault(_footer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }\n\t\n\tvar A = _styledComponents2.default.a(_templateObject);\n\t\n\tvar others = [{ name: 'Gatsby.JS', link: 'https://www.gatsbyjs.org/' }, { name: 'Node.JS', link: 'https://nodejs.org/en/' }, { name: 'CRA', link: 'https://github.com/facebook/create-react-app' }, { name: 'Firebase', link: 'https://firebase.google.com/' }, { name: 'Postman', link: 'https://www.getpostman.com/' }, { name: 'Git', link: 'https://git-scm.com/' }, { name: 'Github', link: 'https://github.com/' }, { name: 'GitKraken', link: 'https://www.gitkraken.com/' }, { name: 'iTerm2', link: 'https://www.iterm2.com/' }, { name: 'Nova Theme', link: 'https://trevordmiller.com/projects/nova' }, { name: 'CircleCI', link: 'https://circleci.com/' }, { name: 'Cypress', link: 'https://www.cypress.io/' }, { name: 'Prettier', link: 'https://github.com/prettier/prettier' }, { name: 'ESLint', link: 'https://eslint.org/' }];\n\t\n\tvar Tool = function Tool(_ref) {\n\t  var title = _ref.title,\n\t      text = _ref.text,\n\t      link = _ref.link;\n\t\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(\n\t      _index.Title3,\n\t      null,\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: link, target: '_blank' },\n\t        title\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      _index.Row,\n\t      { margin: ' 0 0 .4em 0' },\n\t      _react2.default.createElement(\n\t        _index.Text,\n\t        null,\n\t        text\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\tvar Tools = function Tools() {\n\t  return _react2.default.createElement(\n\t    _index.Column,\n\t    { page: true },\n\t    _react2.default.createElement(\n\t      _index.Title1,\n\t      null,\n\t      'On my toolbelt'\n\t    ),\n\t    _react2.default.createElement(\n\t      _index.Text,\n\t      null,\n\t      'Most professions require some variety of tools in order to efficiently and effectively do what they do best. A developer is absolutely no exception--without my toolbelt, I without a doubt would not be able to do my job, period. The following are my trusted allies, my sharpest and shiniest weapons.'\n\t    ),\n\t    _react2.default.createElement(\n\t      _index.Title2,\n\t      null,\n\t      'Development'\n\t    ),\n\t    _react2.default.createElement(Tool, {\n\t      title: 'VS Code',\n\t      link: 'https://code.visualstudio.com/',\n\t      text: ' Any developer who knows me would also know my general disatsifaction and loathing demeanor towards Microsoft products--VS Code is DEFINTELY the exception. I don\\'t need a reason to be overly enthusiastic about the seemingly small things in life; my friend and mentor Raj will laugh as he tells you how excited I was to start using Atom once upon a time. How I would neverrrrrrrr not use Atom, then it was OMG WEBSTORM IS DA BEST. Now, and to stay (for the foreseeable future) is the greatest, lightest, most superior, bestest text editor slash pseudo IDE in the universe: Microsoft\\'s VS Code.'\n\t    }),\n\t    _react2.default.createElement(Tool, {\n\t      title: 'React.JS',\n\t      link: 'https://reactjs.org',\n\t      text: ' React.JS by Facebook\\'s open source team is a declarative, JS framework that provides an easy-to-use component-based API. Utilizing component methods like constructor(), render(), and setState(), you tell React what you want the UI to look like and its out of the box goodies take care of the DOM manipulation. Its wide-spread adoption is attributed to React\\'s lightning-fast, modern look and feel. Since using it myself, I\\'ve built some really cool applications. The React ecosystem is full, vibrant, and seemingly here to stay. If you\\'re looking at JavaScript and are wondering what framework to pick up, I would recommend React. Especially with its updates coming in Async rendering, which is speculated to blow Google\\'s Angular out of the water.'\n\t    }),\n\t    _react2.default.createElement(Tool, {\n\t      title: 'Styled-Components',\n\t      link: 'https://www.styled-components.com/',\n\t      text: ' A friend of mine the other day asked if I still used styled-components and my response was Do I?! I\\'m not sure how we developed before anymore. Point is, I love my styled-components. A lightweight library, styled-components combines ES6 syntax with CSS and results in the ability for you to create reusable, style-encapsulated components that compile down to html tags.'\n\t    }),\n\t    _react2.default.createElement(Tool, {\n\t      title: 'Chart.JS',\n\t      link: 'http://www.chartjs.org/',\n\t      text: 'Contrary to D3\\'s extensive API, Chart.JS provides an easy-to-understand,  fluid and lightweight data visualization API. We\\'re currently using it throughout  our application. It comes out-of-the-box with animations, and props that make it easy  to display data. A simple AJAX call, a data model later, and bam!--you have charts!  Now, I understand there are certain complex cases where Chart.JS may not do the job  for you or your application, which is where D3 comes in. But if you\\'re not requiring  much craziness, then what\\'s the point?'\n\t    }),\n\t    _react2.default.createElement(Tool, {\n\t      title: 'Cypress',\n\t      link: 'https://www.cypress.io/',\n\t      text: 'Cypress is an integration testing solution for the web--write tests using your  favorite assertion library, then run your code and watch Cypress test in their web-based  IDE. It doesn\\'t get more simple than that!'\n\t    }),\n\t    _react2.default.createElement(\n\t      _index.Title3,\n\t      null,\n\t      'Others'\n\t    ),\n\t    _react2.default.createElement(\n\t      _index.Row,\n\t      { style: { flexWrap: 'wrap' }, margin: '0 0 1em 0' },\n\t      others.map(function (tool) {\n\t        return _react2.default.createElement(\n\t          A,\n\t          { href: tool.link, target: '_blank' },\n\t          _react2.default.createElement(\n\t            _index.Text,\n\t            { style: { padding: '0 0 0 .6em', fontSize: '1.1em' } },\n\t            tool.name\n\t          )\n\t        );\n\t      })\n\t    ),\n\t    _react2.default.createElement(\n\t      _index.Title2,\n\t      null,\n\t      'Productivity'\n\t    ),\n\t    _react2.default.createElement(Tool, {\n\t      title: 'Bullet Journal',\n\t      link: 'http://bulletjournal.com/',\n\t      text: ' I\\u2019m not quite sure how I got by before without my notebook\\u200A\\u2014\\u200AI think at one point, I thought it was silly and outdated for a 20-something year old to be taking notes on paper\\u2026 especially when you\\u2019re in the tech industry; what a silly thought. I\\u2019ve now mastered my indexing system and have gone through several journal inserts, titled Meetings, Self-Growth, and Development (programming). Everywhere I go, so does my notebook\\u200A\\u2014\\u200Aready to capture some tip, interaction, or reflection that could be used to solve something later on.'\n\t    }),\n\t    _react2.default.createElement(Tool, {\n\t      title: 'ToDoist',\n\t      link: 'https://en.todoist.com/',\n\t      text: 'I\\'ve been using ToDoist for several months now, and to-date, I have completed 2,892 tasks. I even use it for menial tasks such as \\'text so and so.\\' I have a goal to complete 10 tasks a day, and although I\\'m not always successful, my longest streak was 32 days!. I like ToDoist because of the day-to-day and week-by-week comparisons available.'\n\t    }),\n\t    _react2.default.createElement(Tool, {\n\t      title: 'Forest App',\n\t      link: 'https://www.forestapp.cc/en/',\n\t      text: 'I LOVE Forest App--it\\'s a pomodoro clock approach, with fun little trees  you plant on the screen! Even better, when you collect so many points, you can plant  REAL trees. So back up, what\\'s a pomodoro clock? It\\'s a methodology of working in  25 minute intervals, with 5 minute breaks in between. Why is this effective? Because  work is more deliberate when you are allocating a small amount of time to a particular  task. I remember long back, I had a near 20 page proposal to complete--not a light  task--especially when it\\'s a highly technical document. This may have normally taken  me a few days to complete--with the pomodoro method, I was able to complete the entire  thing start-to-finish in a matter of hours. Because 25 minutes is far less overwhelming  than looking at a complex task. I\\'m using it right now ;)'\n\t    }),\n\t    _react2.default.createElement(Tool, {\n\t      title: 'Trello',\n\t      link: 'https://trello.com/',\n\t      text: 'I\\'m not overly in love with Trello, however, for small business management,  it serves its purpose. For development, we use Github projects for PM.'\n\t    }),\n\t    _react2.default.createElement(Tool, {\n\t      title: 'Airmail',\n\t      link: 'http://airmailapp.com/features',\n\t      text: 'Yes, I use a Macbook Pro, and one thing that Apple cannot seem to get right  is their mail client! Maybe they realize there isn\\'t much of a market for paid email  clients, who knows. I\\'ve been using Airmail for about a year now, and it\\'s cool--no complaints.  Nothing special except for the fact that I\\'m able to switch between my different emails pretty easily.'\n\t    }),\n\t    _react2.default.createElement(_footer2.default, null)\n\t  );\n\t};\n\t\n\texports.default = Tools;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-tools-js-c7c180015667364d8cfd.js","import React from 'react'\nimport styled from 'styled-components'\nimport { Title1, Title2, Title3, Text, Column, Row } from '../theme/index'\nimport Link from 'gatsby-link'\nimport Footer from '../components/footer'\n\nconst A = styled.a`\n  text-decoration: underline;\n  color: #fff;\n  padding: 0.1em 0;\n`\n\nconst others = [\n  { name: 'Gatsby.JS', link: 'https://www.gatsbyjs.org/' },\n  { name: 'Node.JS', link: 'https://nodejs.org/en/' },\n  { name: 'CRA', link: 'https://github.com/facebook/create-react-app' },\n  { name: 'Firebase', link: 'https://firebase.google.com/' },\n  { name: 'Postman', link: 'https://www.getpostman.com/' },\n  { name: 'Git', link: 'https://git-scm.com/' },\n  { name: 'Github', link: 'https://github.com/' },\n  { name: 'GitKraken', link: 'https://www.gitkraken.com/' },\n  { name: 'iTerm2', link: 'https://www.iterm2.com/' },\n  { name: 'Nova Theme', link: 'https://trevordmiller.com/projects/nova' },\n  { name: 'CircleCI', link: 'https://circleci.com/' },\n  { name: 'Cypress', link: 'https://www.cypress.io/' },\n  { name: 'Prettier', link: 'https://github.com/prettier/prettier' },\n  { name: 'ESLint', link: 'https://eslint.org/' },\n]\n\nconst Tool = ({ title, text, link }) => {\n  return (\n    <div>\n      <Title3>\n        <a href={link} target=\"_blank\">\n          {title}\n        </a>\n      </Title3>\n      <Row margin=\" 0 0 .4em 0\">\n        <Text>{text}</Text>\n      </Row>\n    </div>\n  )\n}\n\nconst Tools = () => {\n  return (\n    <Column page>\n      <Title1>On my toolbelt</Title1>\n      <Text>\n        Most professions require some variety of tools in order to efficiently\n        and effectively do what they do best. A developer is absolutely no\n        exception--without my toolbelt, I without a doubt would not be able to\n        do my job, period. The following are my trusted allies, my sharpest and\n        shiniest weapons.\n      </Text>\n      <Title2>Development</Title2>\n      <Tool\n        title=\"VS Code\"\n        link=\"https://code.visualstudio.com/\"\n        text=\" Any developer who knows me would also know my general disatsifaction\n          and loathing demeanor towards Microsoft products--VS Code is DEFINTELY\n          the exception. I don't need a reason to be overly enthusiastic about\n          the seemingly small things in life; my friend and mentor Raj will\n          laugh as he tells you how excited I was to start using Atom once upon\n          a time. How I would neverrrrrrrr not use Atom, then it was OMG\n          WEBSTORM IS DA BEST. Now, and to stay (for the foreseeable future) is\n          the greatest, lightest, most superior, bestest text editor slash\n          pseudo IDE in the universe: Microsoft's VS Code.\"\n      />\n      <Tool\n        title=\"React.JS\"\n        link=\"https://reactjs.org\"\n        text=\" React.JS by Facebook's open source team is a declarative, JS framework\n          that provides an easy-to-use component-based API. Utilizing component\n          methods like constructor(), render(), and setState(), you tell React\n          what you want the UI to look like and its out of the box goodies take\n          care of the DOM manipulation. Its wide-spread adoption is attributed\n          to React's lightning-fast, modern look and feel. Since using it\n          myself, I've built some really cool applications. The React ecosystem\n          is full, vibrant, and seemingly here to stay. If you're looking at\n          JavaScript and are wondering what framework to pick up, I would\n          recommend React. Especially with its updates coming in Async\n          rendering, which is speculated to blow Google's Angular out of the\n          water.\"\n      />\n\n      <Tool\n        title=\"Styled-Components\"\n        link=\"https://www.styled-components.com/\"\n        text=\" A friend of mine the other day asked if I still used styled-components\n          and my response was Do I?! I'm not sure how we developed before\n          anymore. Point is, I love my styled-components. A lightweight\n          library, styled-components combines ES6 syntax with CSS and results in\n          the ability for you to create reusable, style-encapsulated components\n          that compile down to html tags.\"\n      />\n      <Tool\n        title=\"Chart.JS\"\n        link=\"http://www.chartjs.org/\"\n        text=\"Contrary to D3's extensive API, Chart.JS provides an easy-to-understand, \n        fluid and lightweight data visualization API. We're currently using it throughout \n        our application. It comes out-of-the-box with animations, and props that make it easy \n        to display data. A simple AJAX call, a data model later, and bam!--you have charts! \n        Now, I understand there are certain complex cases where Chart.JS may not do the job \n        for you or your application, which is where D3 comes in. But if you're not requiring \n        much craziness, then what's the point?\"\n      />\n      <Tool\n        title=\"Cypress\"\n        link=\"https://www.cypress.io/\"\n        text=\"Cypress is an integration testing solution for the web--write tests using your \n        favorite assertion library, then run your code and watch Cypress test in their web-based \n        IDE. It doesn't get more simple than that!\"\n      />\n      <Title3>Others</Title3>\n      <Row style={{ flexWrap: 'wrap' }} margin=\"0 0 1em 0\">\n        {others.map(tool => {\n          return (\n            <A href={tool.link} target=\"_blank\">\n              <Text style={{ padding: '0 0 0 .6em', fontSize: '1.1em' }}>\n                {tool.name}\n              </Text>\n            </A>\n          )\n        })}\n      </Row>\n      <Title2>Productivity</Title2>\n      <Tool\n        title=\"Bullet Journal\"\n        link=\"http://bulletjournal.com/\"\n        text=\" I’m not quite sure how I got by before without my notebook — I think\n          at one point, I thought it was silly and outdated for a 20-something\n          year old to be taking notes on paper… especially when you’re in the\n          tech industry; what a silly thought. I’ve now mastered my indexing\n          system and have gone through several journal inserts, titled Meetings,\n          Self-Growth, and Development (programming). Everywhere I go, so does\n          my notebook — ready to capture some tip, interaction, or reflection\n          that could be used to solve something later on.\"\n      />\n      <Tool\n        title=\"ToDoist\"\n        link=\"https://en.todoist.com/\"\n        text=\"I've been using ToDoist for several months now, and to-date, I have completed 2,892 tasks. I even use it for menial tasks such as 'text so and so.'\n        I have a goal to complete 10 tasks a day, and although I'm not always successful, my longest streak was 32 days!. I like ToDoist because of the day-to-day and week-by-week comparisons available.\"\n      />\n      <Tool\n        title=\"Forest App\"\n        link=\"https://www.forestapp.cc/en/\"\n        text=\"I LOVE Forest App--it's a pomodoro clock approach, with fun little trees \n        you plant on the screen! Even better, when you collect so many points, you can plant \n        REAL trees. So back up, what's a pomodoro clock? It's a methodology of working in \n        25 minute intervals, with 5 minute breaks in between. Why is this effective? Because \n        work is more deliberate when you are allocating a small amount of time to a particular \n        task. I remember long back, I had a near 20 page proposal to complete--not a light \n        task--especially when it's a highly technical document. This may have normally taken \n        me a few days to complete--with the pomodoro method, I was able to complete the entire \n        thing start-to-finish in a matter of hours. Because 25 minutes is far less overwhelming \n        than looking at a complex task. I'm using it right now ;)\"\n      />\n      <Tool\n        title=\"Trello\"\n        link=\"https://trello.com/\"\n        text=\"I'm not overly in love with Trello, however, for small business management, \n        it serves its purpose. For development, we use Github projects for PM.\"\n      />\n      <Tool\n        title=\"Airmail\"\n        link=\"http://airmailapp.com/features\"\n        text=\"Yes, I use a Macbook Pro, and one thing that Apple cannot seem to get right \n        is their mail client! Maybe they realize there isn't much of a market for paid email \n        clients, who knows. I've been using Airmail for about a year now, and it's cool--no complaints. \n        Nothing special except for the fact that I'm able to switch between my different emails pretty easily.\"\n      />\n      <Footer />\n    </Column>\n  )\n}\n\nexport default Tools\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tools.js"],"sourceRoot":""}